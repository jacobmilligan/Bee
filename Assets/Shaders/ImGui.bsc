RenderPass DefaultPass
{                 
    Attachment MainColor
    {
        type: present
        format: bgra8
        load_op: clear
        store_op: store
        samples: 1
    }

    SubPass DefaultSubPass
    {
        color_attachments: [ MainColor ]
    }
}

RasterState DefaultRasterState
{
    front_face_ccw: true
    cull_mode: back
}

SamplerState DefaultSampler
{
    min_filter: linear
    mag_filter: linear
    u_address: clamp_to_edge
    v_address: clamp_to_edge
    w_address: clamp_to_edge
}

Shader TriangleShader
{
    vertex: vert
    fragment: frag
    resource_layouts: [ per_frame ]
    code:
    {
        BEE_BINDING(0, 0) cbuffer Params
        {
            float4x4 view_proj;
        };

        BEE_BINDING(1, 0) Texture2D<float4> main_tex;
        
        BEE_BINDING(2, 0) sampler main_sampler;

        struct AppData 
        {
            float4 position: POSITION;
            float4 color: COLOR;
            float2 texcoord: TEXCOORD0;
        };

        struct FragIn 
        {
            float4 position: SV_POSITION;
            float4 color: COLOR;
            float2 texcoord: TEXCOORD0;
        };

        FragIn vert(AppData IN)
        {
            FragIn OUT;
            OUT.position = mul(view_proj, IN.position);
            OUT.color = IN.color;
            OUT.texcoord = IN.texcoord;
            return OUT;
        }

        float4 frag(FragIn IN): SV_TARGET
        {
            return main_tex.Sample(main_sampler, IN.texcoord) * IN.color;
            return float4(0.0, 1.0, 0.0, 1.0);
        }
    }
}

PipelineState DefaultPipelineState
{
    primitive_type: triangle
    render_pass: DefaultPass
    subpass: DefaultSubPass
    raster_state: DefaultRasterState
    vertex_stage: TriangleShader
    fragment_stage: TriangleShader
}